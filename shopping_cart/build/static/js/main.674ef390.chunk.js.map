{"version":3,"sources":["ItemContext.js","CartContext.js","Components/Nav.js","Components/Home.js","Components/About.js","Components/Item.js","Components/ShopItemPopup.js","Components/Shop.js","Components/ShopItem.js","Components/CartItem.js","Components/Cart.js","Components/FullCart.js","App.js","index.js"],"names":["ItemContext","createContext","ItemProvider","props","match","useEffect","fetchItems","useState","items","setItems","a","fetch","fetchItem","json","results","console","log","Provider","value","children","CartContext","CartProvider","useContext","cartItems","setCartItems","Nav","className","to","length","Home","Component","About","Item","price","name","description","enhanced_description","src","imageSrc","alt","tooltip","Number","toFixed","ShopItemPopup","isLoading","setLoading","verminion","itemDetail","setItemDetail","id","undefined","Shop","isPopup","setIsPopup","popupItem","setPopupItem","map","item","image","imageAlt","speed","attack","onMouseOver","e","document","getElementById","style","display","showPopup","onMouseOut","onClick","newArr","push","arr","slice","reverse","filter","v","i","findIndex","t","removeDupes","prevItems","updateCart","ShopItem","params","CartItem","count","setCount","startPrice","setPrice","setItemId","removeItem","resetCount","newCart","splice","updateCount","num","updatePrice","fixedPrice","found","find","foundItem","arguments","decreaseCount","onChange","event","formValue","parseInt","target","Cart","window","location","pathname","icon","FullCart","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.674ef390.chunk.js","sourcesContent":["import { React, createContext, useContext, useEffect, useState } from 'react'\nimport {CartContext} from './CartContext'\n\nexport const ItemContext = createContext()\n\nexport const ItemProvider = (props, match) => {\n    //when the page loads, immediately fetch the data\n    useEffect(() => {\n        fetchItems()\n    }, [])\n\n    const [items, setItems] = useState([\n    ])\n\n    const fetchItems = async () => {\n        const fetchItem = await fetch(`https://ffxivcollect.com/api/minions?id_in=120..137`)\n        const items = await fetchItem.json()\n        setItems(items.results)\n        console.log(items.results)\n    }\n\n\n\n\n    return (\n        <ItemContext.Provider value={[items, setItems]}>\n            {props.children}\n        </ItemContext.Provider>\n    )\n}","import { React, createContext, useEffect, useState, useContext } from 'react'\nimport {ItemContext} from './ItemContext'\n\nexport const CartContext = createContext()\n\nexport const CartProvider = (props) => {\n\n    const [items, setItems] = useContext(ItemContext)\n\n    const [cartItems, setCartItems] = useState([\n        \n        \n    ])\n\n    console.log(\"cart items from cart context\")\n    console.log(cartItems)\n\n    return (\n        <CartContext.Provider value={[cartItems, setCartItems]}>\n            {props.children}\n        </CartContext.Provider>\n    )\n}","import React, { Component, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { CartContext } from '../CartContext'\n\nconst Nav = () => {\n    const [cartItems, setCartItems] = useContext(CartContext)\n    let items = cartItems.props\n    return (\n        <nav>\n            <ul className=\"nav-links\">\n                <Link to=\"/\">\n                    <li>Home</li>\n                </Link>\n                <Link to=\"/about\">\n                    <li>About</li>\n                </Link>\n                <Link to=\"/shop\">\n                    <li>Shop</li>\n                </Link>\n                <Link to=\"/cart\">\n                    <li>Cart ({cartItems.length})</li>\n                </Link>\n            </ul>\n        </nav>\n    )\n\n\n}\n\nexport default Nav","import React, { Component } from 'react'\n\nclass Home extends Component{\n    constructor(){\n        super()\n    }\n\n    render(){\n        return (\n            <div>\n                <h1>Welcome</h1>\n            </div>\n        )\n    }\n   \n}\n\nexport default Home","import React, { Component } from 'react'\n\nclass About extends Component{\n    constructor(){\n        super()\n    }\n    render(){\n        return(\n            <div>\n                <h1>About</h1>\n            </div>\n        )\n    }\n    \n}\n\nexport default About","import { React, Component, useContext, useEffect, useState } from 'react'\nimport {CartContext} from '../CartContext'\n\n\nconst Item = (props) => {\n    const [price, setPrice] = useState(props.price)\n\n    const [cartItems, setCartItems] = useContext(CartContext)\n\n    function updateCart(newitem) {\n        setCartItems(prevItems => [...prevItems, newitem])\n    }\n\n    return (\n        <div className=\"shopItem\">\n            <h3 className=\"itemName\">{props.name}</h3>\n            <h4>{props.description}</h4>\n            <h4>{props.enhanced_description}</h4>\n            <img src={props.imageSrc} alt={props.name} />\n            <h5>{props.tooltip}</h5>\n            <h4 className=\"itemPrice\">${Number(props.price).toFixed(2)}</h4>\n            \n        \n        </div>\n\n    )\n\n    \n}\n\nexport default Item","\nimport { React, Component, useContext, useEffect, useState, useRef } from 'react'\nimport Item from './Item'\nimport { ItemContext } from '../ItemContext'\nimport { CartContext } from '../CartContext'\n\n\n\nconst ShopItemPopup = (props) => {\n    const [isLoading, setLoading] = useState(true)\n    const [itemDetail, setItemDetail] = useState({\n        results: {\n            name: {\n\n            }\n\n        },\n        verminion: {}\n    })\n\n    useEffect(() => {\n\n        const fetchItem = async () => {\n\n            try {\n                const fetchItem = await fetch(`https://ffxivcollect.com/api/minions?id_in=${props.id}`)\n\n                if (isLoading) {\n                    const itemDetail = await fetchItem.json()\n                    setItemDetail(itemDetail.results[0])\n                    if (itemDetail !== undefined) {\n                        setLoading(false)\n\n                    }\n                }\n\n\n            }\n            catch {\n                setLoading(true)\n            }\n\n\n        }\n\n       \n    \n\n        fetchItem()\n\n    }, [])\n\n\n    return (\n\n        <div>\n            {isLoading ? (\n                <h2>loading...</h2>\n            ) : (\n                    <div>\n                        <h2>{props.id}</h2>\n                        <h2>{itemDetail.name}</h2>\n                        <h2>{itemDetail.description + \" \" + itemDetail.enhanced_description}</h2>\n                    </div>\n                )}\n        </div>\n\n    )\n}\n\n\nexport default ShopItemPopup","import React, { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { ItemContext } from '../ItemContext'\nimport { CartContext } from '../CartContext'\nimport Item from './Item'\nimport ShopItemPopup from './ShopItemPopup'\n\n\nfunction Shop() {\n    //creating a state for isPopup\n    //to create a re-render for when the popup needs to be closed/opened\n    const [isPopup, setIsPopup] = useState(false)\n    const [items, setItems] = useContext(ItemContext)\n    const [cartItems, setCartItems] = useContext(CartContext)\n    const [popupItem, setPopupItem] = useState(0)\n\n\n    //check for duplicates in the cart array, before updating cartItems\n    function removeDupes(arr) {\n        //v = value, i = index, a = array\n        if (arr.length > 1) {\n            arr = arr.slice().reverse().filter((v, i, a) => a.findIndex(t => (t.id === v.id)) === i).reverse()\n            return arr;\n\n        }\n    }\n\n    function updateCart(itemDetail) {\n        //if there is anything in the cart, check for dupes\n        if (cartItems.length > 0) {\n            console.log(\"cart:\")\n            console.log(cartItems)\n            let newArr = cartItems\n            newArr.push(itemDetail)\n            newArr = removeDupes(newArr)\n            //setCartItems(prevItems => [...prevItems, itemDetail])\n            setCartItems(newArr)\n            console.log(\"removed dupes:\")\n            console.log(newArr)\n        }\n        //if cart is empty, no need to check for dupes\n        else {\n            setCartItems(prevItems => [...prevItems, itemDetail])\n            console.log(\"cart:\")\n            console.log(cartItems)\n        }\n    }\n\n    function showPopup(item) {\n        setIsPopup(true)\n        console.log(isPopup)\n        //create a new variable for the item value passed to this function\n        //so we can send that same value off to setPopupItem()\n        let popupItem = item;\n        setPopupItem(popupItem)\n        document.getElementById(\"popup\").style.display = \"block\"\n\n\n\n    }\n\n    function hidePopup(item) {\n        //setPopupItem(0)\n        setIsPopup(false)\n        document.getElementById(\"popup\").style.display = \"none\"\n        //be sure to change to false when mouse leaves\n        \n\n    }\n\n    return (\n        <div className=\"parent\">\n\n            <h1>Shop</h1>\n            {/* only return the shop item component if isPopup is true \n                otherwise return an empty div */ }\n            {isPopup ? (\n                <div className=\"popup\" id=\"popup\">\n                    <ShopItemPopup id={popupItem} />\n                    \n\n                </div>\n            ) : (\n                    <div className=\"popup\" id=\"popup\">\n\n                    </div>\n                )}\n\n            <div className=\"shop-div\">\n                {items.map(item => (\n                    <div key={item.id}>\n\n                        <h2>\n                            <Link to={`/shop/${item.id}`} className=\"minion-links\">\n                                <Item name={item.name}\n                                    imageSrc={item.image}\n                                    imageAlt={item.name}\n                                    price={item.verminion.speed + \".\" + item.verminion.attack} />\n                            </Link>\n                        </h2>\n                        <div className=\"buttonDiv\">\n                            <button id={item.id} onMouseOver={e => showPopup(item.id)} onMouseOut={e => hidePopup(item.id)}>quick view</button>\n                            <button id={item.name} onClick={e => updateCart(item)}>add</button>\n                        </div>\n\n                    </div>\n                ))}\n            </div>\n\n        </div>\n    )\n}\n\n\nexport default Shop\n","\nimport { React, Component, useContext, useEffect, useState } from 'react'\nimport Item from './Item'\nimport {ItemContext} from '../ItemContext'\nimport {CartContext} from '../CartContext'\n\n\nfunction ShopItem ({match}) {\n    useEffect(() => {\n        fetchItem()\n    }, [])\n\n    // passing empty [] -> run effect and clean it up only once on mount/unmount\n    \n    const [itemDetail, setItemDetail] = useState({\n        results:{\n            name:{\n\n            }\n        \n        },\n        verminion:{}\n    })\n\n    const fetchItem = async () => {\n        const fetchItem = await fetch(`https://ffxivcollect.com/api/minions?id_in=${match.params.id}`)\n        const itemDetail = await fetchItem.json()\n        setItemDetail(itemDetail.results[0])\n        console.log(itemDetail.results[0])\n    }\n\n    const [cartItems, setCartItems] = useContext(CartContext)\n\n        return (\n            <div className=\"shop_item_popup\">\n                <div className=\"shop-item\">\n                    <Item name={itemDetail.name}\n                        description={itemDetail.description}\n                        enhanced_description={itemDetail.enhanced_description}\n                        imageSrc={itemDetail.image}\n                        imageAlt={itemDetail.name}\n                        tooltip={itemDetail.tooltip}\n                        price={itemDetail.verminion.speed + \".\" + itemDetail.verminion.attack}                 \n                    />           \n                </div>\n            </div>\n        )\n    \n}\n\nexport default ShopItem","import React, { useState, useEffect, useContext, createFactory } from 'react'\nimport { CartContext } from '../CartContext'\n\nconst CartItem = (props) => {\n    const [count, setCount] = useState(1)\n    let startPrice = Number(props.price)\n    const [price, setPrice] = useState(startPrice)\n    const [cartItems, setCartItems] = useContext(CartContext)\n    const [itemId, setItemId] = useState(0)\n\n    const[foundItem, setFoundItem] = useState(undefined)\n\n    function updateCart(cart){\n    \n        setCartItems(cart)\n        console.log(\"cart from update\")\n        console.log(cartItems)\n \n    }\n\n    function removeItem(id){\n            console.log(\"removing item:\" + id)\n            //setCartItems(cartItems.filter(obj => obj.id !== id))\n            if(cartItems.length -1 < 1){\n                for(var i = cartItems.length -1; i > -1; i--){\n                    if(cartItems[i].name === id){\n                        resetCount()\n\n                        let newCart = cartItems\n                        newCart.splice(i, 1)\n                        updateCart(newCart)\n                        console.log(newCart)\n                     \n      \n                    }\n                }\n            }\n            else if(cartItems.length -1 <= 0){\n                resetCount()\n                setCartItems([])\n            }\n          \n   \n    }\n\n    //num is the increment or decrement value (+1 or -1)\n    function updateCount(num){\n        console.log(count + \"adding\")\n        setCount(count + num)\n        updatePrice(count, num)\n        \n        \n    }\n\n    function resetCount(){\n        console.log(\"resetting count\")\n        setCount(1)\n        updatePrice(1, 0)\n    }\n\n    function decreaseCount(id){\n        setItemId(id)\n        if(count > 0){\n            //check if count is able to be decreased without removing the item\n            if(count - 1 > 0){\n                updateCount(-1)\n                console.log(count + \"not removing\")\n               \n            }\n            //if it will be automatically removed if its decreased\n            //we want to remove the item first, and then decrease it once it has been removed\n            //so it does not pass the render check before its removed (count > 0)\n            //AKA, it will render it if you don't remove it before the render condition\n            else if(count -1 <= 0){\n                console.log(\"removing item...\" + id)\n                removeItem(...arguments)\n                console.log(count + \"removing\")\n                resetCount()\n               \n            }\n\n        }\n\n        if(count < 0){\n            removeItem(...arguments)\n\n            console.log(count + \"removing\")\n            resetCount()\n\n        }\n        \n    }\n\n\n    function updatePrice(count, num){\n            setPrice(startPrice * (count + num))\n            let fixedPrice = Number(price).toFixed(2)\n            console.log(\"price: \" + fixedPrice + \", count: \" + count)\n            \n    }\n\n    function handleChange(event){\n        //have to convert to int so that when the user clicks\n        //the + or - button it will decrease the value as an int\n        let formValue = parseInt(event.target.value)\n        setCount(formValue)\n    }\n\n\n    //instead check if item exists in the cart array\n    //**** */\n    let found = (cartItems.find(foundItem => foundItem.name === props.name))\n    console.log(\"is it found?\" + found)\n\n\n    if(found){\n        \n\n        return (\n       \n            <div>\n                <h4>{props.name}</h4>\n                <img src={props.imageSrc} alt={props.name} />\n                <h5>${price.toFixed(2)}</h5>\n                <button onClick={() => decreaseCount(props.name)}>-</button>\n                <input value={count} onChange={handleChange}/>\n                <button onClick={() => updateCount(1)}>+</button>\n                \n            </div>\n        )\n    }\n    else{\n        return(\n            <div id=\"deleted\">deleted</div>\n        )\n        \n    }\n    \n\n    \n}\n\nexport default CartItem","import { React, useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../CartContext'\nimport CartItem from './CartItem'\n\nfunction Cart(props) {\n    const [cartItems, setCartItems] = useContext(CartContext)\n\n    //check if we are on the shop page or not to decide whether we should render the\n    //sidebar cart component\n    if(window.location.pathname !== \"/cart\"){\n    return (\n        <div className=\"cart\" id=\"cart\" >\n             <button onClick={emptyCart}>empty cart</button>\n            <h3>Cart</h3>\n            {(cartItems.map(item => (\n            <div key={item.id}>\n                <CartItem name={item.name}\n                    imageSrc={item.icon}\n                    imageAlt={item.name}\n                    price={item.verminion.speed + \".\" + item.verminion.attack}\n\n                />\n                {item.name}\n            </div>\n              )))}  \n        </div>\n    )\n   }\n\n   //if not \n   else{\n       return <> </>\n   }\n   \n\n    function emptyCart() {\n        let emptiedCart = []\n        setCartItems(emptiedCart)\n    }\n\n\n}\n\nexport default Cart","import { React, Component, useContext, useEffect, useState } from 'react'\nimport { CartContext } from '../CartContext'\nimport CartItem from './CartItem'\nimport Cart from './Cart'\n\n\nfunction FullCart (){\n    \n    const [cartItems, setCartItems] = useContext(CartContext)\n        return(\n            <div>\n                <h1>Cart</h1>\n                {(cartItems.map(item => (\n            <div key={item.id}>\n                <CartItem name={item.name}\n                    imageSrc={item.icon}\n                    imageAlt={item.name}\n                    price={item.verminion.speed + \".\" + item.verminion.attack}\n\n                />\n            </div>\n              )))} \n\n            </div>\n        )\n    \n    \n}\n\nexport default FullCart","import './App.css';\nimport React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Nav from './Components/Nav'\nimport Home from './Components/Home'\nimport About from './Components/About'\nimport Shop from './Components/Shop'\nimport ShopItem from './Components/ShopItem'\nimport Cart from './Components/Cart'\nimport FullCart from './Components/FullCart'\nimport { ItemProvider } from './ItemContext'\nimport { CartProvider } from './CartContext'\nimport ShopItemPopup from './Components/ShopItemPopup';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n\n      <Router>\n        <Switch>\n\n          <ItemProvider>\n            <CartProvider>\n              <Nav />\n          \n              <Cart />\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/about\" exact component={About} />\n              <Route path=\"/shop\" exact component={Shop} />\n              <Route path=\"/shop/:id\" exact component={ShopItem} /> \n                       \n              <Route path=\"/cart\" exact component={FullCart} />\n\n\n            </CartProvider>\n          </ItemProvider>\n        </Switch>\n\n      </Router>\n    </div>\n\n  )\n\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}